/**
 *******************************************************************************
 *******************************************************************************
 *
 * @file	hdmi_tx.c
 * @author	R. Bush
 * @email	bush@krtkl.com
 * @version	v1.0
 * @date	2018 May 18
 * @brief	HDMI Transmitter
 * @license	FreeBSD
 *
 *******************************************************************************
 *
 * Copyright (c) 2017, krtkl inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *	  this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *	  this list of conditions and the following disclaimer in the documentation
 *	  and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are
 * those of the authors and should not be interpreted as representing official
 * policies, either expressed or implied, of the FreeBSD Project.
 *
 *******************************************************************************
 */

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <unistd.h>

#include "i2c.h"

#include "hdmi_tx.h"

#define HDMI_TX_DEVICE_ID			(0)
#define HDMI_TX_NCONFIGS			(1)

struct tda998x_dev hdmi_tx;

static struct tda998x_cfg hdmi_tx_cfg_tab[HDMI_TX_NCONFIGS] =
{
	{
		.id = HDMI_RX_DEVICE_ID,
		.i2c_addr = TDA1997X_HDMI_I2C_ADDR,
		.cec_addr = TDA1997X_CEC_ADDR_DEFAULT,
		.i2c_write = i2c_write_reg,
		.i2c_read = i2c_read_reg
	}
};

/**
 * @brief	Audio configuration lookup by device identifier
 *
 * @dev_id	Device identifier to use for lookup
 * @return	Pointer to configuration matching device identifier if found or
 * 			NULL if not found in the lookup table
 */
static struct tda1997x_cfg *hdmi_rx_cfg_lookup(int dev_id)
{
	struct tda1997x_cfg *cfg = NULL;
	int i;

	for (i = 0; i < HDMI_RX_NCONFIGS; i++) {
		if (hdmi_rx_cfg_tab[i].id == dev_id) {
			cfg = &hdmi_rx_cfg_tab[i];
			break;
		}
	}

	return cfg;
}

/**
 * @brief	HDMI Receiver Initialization
 */
int hdmi_rx_init(void)
{
	int err;
	struct tda1997x_cfg *cfg;

	cfg = hdmi_rx_cfg_lookup(HDMI_RX_DEVICE_ID);
	if (cfg == NULL) {
		printf("[ERROR] %s() %s %d\n", __func__, __FILE__, __LINE__);
		return (-1);
	}

	err = i2c_init(cfg->i2c_addr);
	if (err < 0) {
		printf("[ERROR] %s() %s %d\n", __func__, __FILE__, __LINE__);
		return err;
	}

	err = i2c_init(cfg->cec_addr);
	if (err < 0) {
		printf("[ERROR] %s() %s %d\n", __func__, __FILE__, __LINE__);
		return err;
	}

	return tda1997x_init(&hdmi_rx, cfg);
}
