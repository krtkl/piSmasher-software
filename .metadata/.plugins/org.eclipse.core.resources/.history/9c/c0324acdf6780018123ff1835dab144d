/**
 *******************************************************************************
 *******************************************************************************
 *
 * @file	tda998x.h
 * @author	R. Bush
 * @email	bush@krtkl.com
 * @version	v1.0
 * @date	2017 November 10
 * @brief	NXP TDA998x HDMI Transmitter
 * @license	FreeBSD
 *
 *******************************************************************************
 *
 * Copyright (c) 2017, krtkl inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *	  this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *	  this list of conditions and the following disclaimer in the documentation
 *	  and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are
 * those of the authors and should not be interpreted as representing official
 * policies, either expressed or implied, of the FreeBSD Project.
 *
 *******************************************************************************
 */

#ifndef __TDA998X_H
#define __TDA998X_H

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @addtogroup	NXP_TDA998X
 * @{
 */

/**
 * @brief
 */
enum tda998x_sink {
	SINK_DVI = 0,				/**< DVI  */
	SINK_HDMI = 0x01,			/**< HDMI */
	SINK_EDID = 0x02			/**< As currently defined in EDID */
};

enum tda998x_edid_state {
	EDID_NOT_READ = 0,
	EDID_READ
};

enum tda998x_video_format {
	HDMITX_VFMT_NULL = 0,    	/**< Not a valid format...        */
	VFMT_01_640x480p_60Hz = 1,	/**< Format 01 640  x 480p  60Hz  */
	VFMT_02_720x480p_60Hz = 2,	/**< Format 02 720  x 480p  60Hz  */
	VFMT_03_720x480p_60Hz = 3,	/**< Format 03 720  x 480p  60Hz  */
	VFMT_04_1280x720p_60Hz = 4,	/**< Format 04 1280 x 720p  60Hz  */
	VFMT_05_1920x1080i_60Hz = 5,	/**< Format 05 1920 x 1080i 60Hz  */
	VFMT_06_720x480i_60Hz = 6,	/**< Format 06 720  x 480i  60Hz  */
	VFMT_07_720x480i_60Hz = 7,	/**< Format 07 720  x 480i  60Hz  */
	VFMT_08_720x240p_60Hz = 8,	/**< Format 08 720  x 240p  60Hz  */
	VFMT_09_720x240p_60Hz = 9,	/**< Format 09 720  x 240p  60Hz  */
	VFMT_10_720x480i_60Hz = 10,	/**< Format 10 720  x 480i  60Hz  */
	VFMT_11_720x480i_60Hz = 11,	/**< Format 11 720  x 480i  60Hz  */
	VFMT_12_720x240p_60Hz = 12,	/**< Format 12 720  x 240p  60Hz  */
	VFMT_13_720x240p_60Hz = 13,	/**< Format 13 720  x 240p  60Hz  */
	VFMT_14_1440x480p_60Hz = 14,	/**< Format 14 1440 x 480p  60Hz  */
	VFMT_15_1440x480p_60Hz = 15,	/**< Format 15 1440 x 480p  60Hz  */
	VFMT_16_1920x1080p_60Hz = 16,	/**< Format 16 1920 x 1080p 60Hz  */
	VFMT_17_720x576p_50Hz = 17,	/**< Format 17 720  x 576p  50Hz  */
	VFMT_18_720x576p_50Hz = 18,	/**< Format 18 720  x 576p  50Hz  */
	VFMT_19_1280x720p_50Hz = 19,	/**< Format 19 1280 x 720p  50Hz  */
	VFMT_20_1920x1080i_50Hz = 20,	/**< Format 20 1920 x 1080i 50Hz  */
	VFMT_21_720x576i_50Hz = 21,	/**< Format 21 720  x 576i  50Hz  */
	VFMT_22_720x576i_50Hz = 22,	/**< Format 22 720  x 576i  50Hz  */
	VFMT_23_720x288p_50Hz = 23,	/**< Format 23 720  x 288p  50Hz  */
	VFMT_24_720x288p_50Hz = 24,	/**< Format 24 720  x 288p  50Hz  */
	VFMT_25_720x576i_50Hz = 25,	/**< Format 25 720  x 576i  50Hz  */
	VFMT_26_720x576i_50Hz = 26,	/**< Format 26 720  x 576i  50Hz  */
	VFMT_27_720x288p_50Hz = 27,	/**< Format 27 720  x 288p  50Hz  */
	VFMT_28_720x288p_50Hz = 28,	/**< Format 28 720  x 288p  50Hz  */
	VFMT_29_1440x576p_50Hz = 29,	/**< Format 29 1440 x 576p  50Hz  */
	VFMT_30_1440x576p_50Hz = 30,	/**< Format 30 1440 x 576p  50Hz  */
	VFMT_31_1920x1080p_50Hz = 31,	/**< Format 31 1920 x 1080p 50Hz  */
	VFMT_32_1920x1080p_24Hz = 32,	/**< Format 32 1920 x 1080p 24Hz  */
	VFMT_33_1920x1080p_25Hz = 33,	/**< Format 33 1920 x 1080p 25Hz  */
	VFMT_34_1920x1080p_30Hz = 34,	/**< Format 34 1920 x 1080p 30Hz  */
	VFMT_35_2880x480p_60Hz = 35,	/**< Format 35 2880 x 480p  60Hz 4:3  */
	VFMT_36_2880x480p_60Hz = 36,	/**< Format 36 2880 x 480p  60Hz 16:9 */
	VFMT_37_2880x576p_50Hz = 37,	/**< Format 37 2880 x 576p  50Hz 4:3  */
	VFMT_38_2880x576p_50Hz = 38,	/**< Format 38 2880 x 576p  50Hz 16:9 */
//	VFMT_INDEX_60_1280x720p_24Hz = 39,	/**< Index of HDMITX_VFMT_60_1280x720p_24Hz */
	VFMT_60_1280x720p_24Hz = 60,	/**< Format 60 1280 x 720p  23.97/24Hz 16:9 */
	VFMT_61_1280x720p_25Hz = 61,	/**< Format 61 1280 x 720p  25Hz 16:9 */
	VFMT_62_1280x720p_30Hz = 62,	/**< Format 60 1280 x 720p  29.97/30Hz 16:9 */
	VFMT_TV_MAX = 62,		/**< Highest valid TV format      */
	VFMT_TV_NO_REG_MIN = 32,	/**< Lowest TV format without prefetched table */
	VFMT_TV_NUM = 42,		/**< Number of TV formats & null  */
	VFMT_PC_MIN = 128,		/**< Lowest valid PC format       */
	VFMT_PC_640x480p_60Hz = 128,	/**< PC format 128                */
	VFMT_PC_800x600p_60Hz = 129,	/**< PC format 129                */
	VFMT_PC_1152x960p_60Hz = 130,	/**< PC format 130                */
	VFMT_PC_1024x768p_60Hz = 131,	/**< PC format 131                */
	VFMT_PC_1280x768p_60Hz = 132,	/**< PC format 132                */
	VFMT_PC_1280x1024p_60Hz = 133,	/**< PC format 133                */
	VFMT_PC_1360x768p_60Hz = 134,	/**< PC format 134                */
	VFMT_PC_1400x1050p_60Hz = 135,	/**< PC format 135                */
	VFMT_PC_1600x1200p_60Hz = 136,	/**< PC format 136                */
	VFMT_PC_1024x768p_70Hz = 137,	/**< PC format 137                */
	VFMT_PC_640x480p_72Hz = 138,	/**< PC format 138                */
	VFMT_PC_800x600p_72Hz = 139,	/**< PC format 139                */
	VFMT_PC_640x480p_75Hz = 140,	/**< PC format 140                */
	VFMT_PC_1024x768p_75Hz = 141,	/**< PC format 141                */
	VFMT_PC_800x600p_75Hz = 142,	/**< PC format 142                */
	VFMT_PC_1024x864p_75Hz = 143,	/**< PC format 143                */
	VFMT_PC_1280x1024p_75Hz = 144,	/**< PC format 144                */
	VFMT_PC_640x350p_85Hz = 145,	/**< PC format 145                */
	VFMT_PC_640x400p_85Hz = 146,	/**< PC format 146                */
	VFMT_PC_720x400p_85Hz = 147,	/**< PC format 147                */
	VFMT_PC_640x480p_85Hz = 148,	/**< PC format 148                */
	VFMT_PC_800x600p_85Hz  = 149,	/**< PC format 149                */
	VFMT_PC_1024x768p_85Hz = 150,	/**< PC format 150                */
	VFMT_PC_1152x864p_85Hz = 151,	/**< PC format 151                */
	VFMT_PC_1280x960p_85Hz = 152,	/**< PC format 152                */
	VFMT_PC_1280x1024p_85Hz = 153,	/**< PC format 153                */
	VFMT_PC_1024x768i_87Hz = 154,	/**< PC format 154                */
};

enum tda998x_video_in_mode {
	VINMODE_CCIR656 = 0,		/**< CCIR656 */
	VINMODE_RGB444,			/**< RGB444  */
	VINMODE_YUV444,			/**< YUV444  */
	VINMODE_YUV422,			/**< YUV422  */
#ifdef RGB_DDR_12BITS
	VINMODE_RGB_DDR_12BITS,
#endif
};

enum tda998x_sync_source {
    SYNCSRC_EMBEDDED = 0,		/**< Embedded sync */
    SYNCSRC_EXT_VREF = 1,		/**< External sync Vref, Href, Fref */
    SYNCSRC_EXT_VS = 2			/**< External sync Vs, Hs */
};

enum tda998x_pixel_rate {
    PIXRATE_DOUBLE = 0,			/**< Double pixel rate */
    PIXRATE_SINGLE = 1,			/**< Single pixel rate */
    PIXRATE_SINGLE_REPEATED = 2		/**< Single pixel repeated */
};

enum tda998x_format_3d {
    FORMAT_3D_NONE = 0,			/**< 3D video data not present */
    FORMAT_3D_FRAME_PACKING = 1,	/**< 3D video data Frame Packing structure */
    FORMAT_3D_TOP_AND_BOTTOM = 2,	/**< 3D video data Top and Bottom structure */
    FORMAT_3D_SIDE_BY_SIDE_HALF = 3,	/**< 3D video data Side by Side Half structure */
};

enum tda998x_video_out_mode {
	VOUTMODE_RGB444 = 0,		/**< RGB444    */
	VOUTMODE_YUV422 = 1,		/**< YUV422    */
    	VOUTMODE_YUV444 = 2		/**< YUV444    */
};

/*
 * @brief	Video quantization range
 */
enum tda998x_vqr {
    VQR_DEFAULT = 0,			/* Follow HDMI spec. */
    VQR_RGB_FULL = 1,			/* Force RGB FULL , DVI only */
    VQR_RGB_LIMITED = 2			/* Force RGB LIMITED , DVI only */
} ;

struct tda998x_video_in_cfg {
	enum tda998x_video_format	format;		/**< Video format as defined by EIA/CEA 861-D */
	enum tda998x_video_in_mode	mode;		/**< Video mode (CCIR, RGB, YUV, etc.) */
	enum tda998x_sync_source	sync_src;	/**< Sync source type */
	enum tda998x_pixel_rate		pix_rate;	/**< Pixel rate */
	enum tda998x_format_3d		format_3d;	/**< 3D structure as defined in HDMI1.4a */
};

struct tda998x_video_out_cfg {
	enum tda998x_video_format	format;		/**< Video format as defined by EIA/CEA 861-D */
	enum tda998x_video_out_mode	mode;		/**< Video mode (CCIR, RGB, YUV, etc.) */
	enum tda998x_color_depth	color_depth;	/**< Color depth */
	enum tda998x_vqr		vqr;		/**< VQR applied in DVI mode */
};

//typedef struct
//{
//   tmdlHdmiTxAudioFormat_t          format;             /**< Audio format (I2S, SPDIF, etc.) */
//   tmdlHdmiTxAudioRate_t            rate;               /**< Audio sampling rate */
//   tmdlHdmiTxAudioI2SFormat_t       i2sFormat;          /**< I2S format of the audio input */
//   tmdlHdmiTxAudioI2SQualifier_t    i2sQualifier;       /**< I2S qualifier of the audio input (8,16,32 bits) */
//   tmdlHdmiTxDstRate_t              dstRate;            /**< DST data transfer rate */
//   UInt8                            channelAllocation;  /**< Ref to CEA-861D p85 */
//   tmdlHdmiTxAudioInChannelStatus   channelStatus;      /**< Ref to IEC 60958-3 */
//} tmdlHdmiTxAudioInConfig_t;





/**
 * @brief	TDA998X device
 */
struct tda998x_dev {
	int				id;
	struct tda998x_cfg		*cfg;
	uint8_t				features;
	uint16_t			version;
	enum tda998x_sink		sink;
	enum tda998x_sink		edid_sink;
	enum tda998x_edid_state		edid_state;
};

int tda998x_init(struct tda998x_dev *dev);
int tda998x_set_inout(void);
/**
 * @}
 */

#ifdef __cplusplus
}
#endif

#endif /* __TDA998X_H */
